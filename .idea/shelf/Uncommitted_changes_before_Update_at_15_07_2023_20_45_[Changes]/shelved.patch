Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#....................................................................................\r\n#.............B.E.L.A. - Bot de Exploração e Levantamento de Arquivos................\r\n#....................................................................................\r\n\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.by import By\r\nfrom selenium.webdriver.support.wait import WebDriverWait\r\nfrom selenium.webdriver.support import expected_conditions as EC\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver import ActionChains\r\nfrom pywinauto import Application\r\nimport time\r\nimport pandas as pd\r\n\r\nprint('....................................................................................')\r\nprint('....................................................................................')\r\nprint('............ B.E.L.A. - Bot de Exploração e Levantamento de Arquivos ...............')\r\nprint('....................................................................................')\r\nprint('....................................................................................')\r\n\r\nprint('\\n\\n...................................Iniciando BELA...................................')\r\n# Configurar o driver do Firefox\r\ndriver = webdriver.Firefox()\r\n\r\n# Acessar a página de pesquisa\r\ndriver.get('https://s2id.mi.gov.br/paginas/index.xhtml')\r\n\r\n# Fecha a Caixa e Dialogo Inicial\r\nbotao_ok = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, \"j_idt35\")))\r\nbotao_ok.click()\r\n\r\nprint('\\n')\r\nprint('\\n.....................................S2iD Ativo.....................................')\r\n\r\n\r\n\r\n# Fazer login\r\nusuario_login = driver.find_element(By.ID, 'usuario').send_keys(Login)\r\nsenha_login = driver.find_element(By.ID, 'j_idt56').send_keys(Senha)\r\ntime.sleep(1)\r\n\r\nbotao_login = driver.find_element(By.ID, 'btnEnter').click()\r\n\r\nprint('\\n...................................Usuario logado...................................')\r\n\r\n# Acessar o módulo \"Reconhecimento Federal\"\r\nrec_federal = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, '[title=\"Reconhecimento Federal\"]')))\r\nrec_federal.click()\r\n\r\nprint('\\n..........................Entrando no modulo Reconhcimento..........................')\r\n\r\n# Definir o protocolo a ser pesquisado -  Por Enquanto\r\n#protocolos = {'AL-F-2708501-13214-20230707',\r\n#            'RN-F-2410603-14110-20230713',\r\n#            'PA-F-1506609-13214-20230626',\r\n#            'PR-F-4102901-12100-20230711',\r\n#            'AL-F-2701100-13214-20230708',\r\n#            'PE-F-2603405-14110-20230627',\r\n#          }\r\n\r\nprotocolos = 'C:\\\\Users\\\\eber_\\\\Documents\\\\delveloper\\\\MIDR\\\\aquivos\\\\usuarios_desabilitar.xlsx'\r\n\r\nfor index, row in protocolos:\r\n    protocolo = row['PROTOCOLO']\r\n\r\n    # Iniciar o cronômetro\r\n    start_time = time.time()\r\n\r\n    # Pesquisar o protocolo\r\n    campo_pesquisa = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, 'accordion:form-reconhecimento:tbl-processos-reconhecimento:j_idt123:filter')))\r\n    campo_pesquisa.clear()\r\n    campo_pesquisa.send_keys(protocolo)\r\n    time.sleep(1)\r\n    campo_pesquisa.send_keys(Keys.ENTER)\r\n\r\n    print('\\n.................................Pesquisa Concluida.................................')\r\n    time.sleep(2)\r\n\r\n    # Localizar a tabela de processos\r\n    WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, 'accordion:form-reconhecimento:tbl-processos-reconhecimento_data')))\r\n\r\n    tabela = driver.find_element(By.ID, 'accordion:form-reconhecimento:tbl-processos-reconhecimento_data')\r\n    tabela_linha = tabela.find_element(By.CSS_SELECTOR, '[data-ri=\"0\"]')\r\n    time.sleep(1)\r\n\r\n    print('\\n................................Protocolo Localizado................................')\r\n\r\n    # Acessar o detalhe do protocolo\r\n    ActionChains(driver).double_click(tabela_linha).perform()\r\n\r\n    print('\\n................................Acessando  Protocolo................................')\r\n\r\n    # Aguardar até o elemento onde os arquivos estão apareça\r\n    detalhes = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, 'accordion:j_idt152')))\r\n\r\n    #rolar até o fim da pagina\r\n    driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\r\n\r\n    arquivos_disponiveis = ''\r\n\r\n    print('\\n.............................Procurando  RECONHECIMENTO.............................')\r\n    # Iterar através de um range de 0 a 49 para percorrer as ids até Encontrar o pasta do Reconhecimento e expandi-la\r\n    for pasta in range(0, 50):\r\n        id = f\"accordion:arquivos_disponiveis:{pasta}\"\r\n        print(f'......................................pasta  {pasta+1}......................................')\r\n\r\n        # Verifica se o id existe\r\n        try:\r\n            arquivo = detalhes.find_element(By.ID, id)\r\n        except:\r\n            continue\r\n\r\n        # Encontrar o elemento de tag que contém o texto do nó\r\n        subarquivo = arquivo.find_element(By.TAG_NAME, 'span')\r\n        tag = subarquivo.find_element(By.CLASS_NAME, 'ui-treenode-label')\r\n        # Verificar se o texto da tag é igual a 'RECONHECIMENTO'\r\n        if tag.text == 'RECONHECIMENTO':\r\n            print(f'\\n........................RECONHECIMENTO Encontrado na Pasta {pasta + 1}........................')\r\n            arquivos_disponiveis = id\r\n            # Encontrar o elemento de expansão para mostrar os subelementos\r\n            reconhecimento = arquivo.find_element(By.TAG_NAME, 'span')\r\n            espandir = reconhecimento.find_element(By.CLASS_NAME, 'ui-tree-toggler').click()\r\n            # Sair do loop\r\n            break\r\n    time. sleep(2)\r\n\r\n    print('\\n.................................Procurando  DMATE..................................')\r\n    # Iterar através de um range de 0 a 49 para percorrer as ids até Encontrar o pasta do DMATE e marca-la\r\n    for pasta in range(0, 50):\r\n        id = f\"{arquivos_disponiveis}_{pasta}\"\r\n        print(f'......................................pasta  {pasta+1}......................................')\r\n\r\n        # Verifica se o id existe\r\n        try:\r\n            arquivo = detalhes.find_element(By.ID, id)\r\n        except:\r\n            continue\r\n\r\n        # Encontrar o elemento de tag que contém o texto do nó\r\n        subarquivo = arquivo.find_element(By.TAG_NAME, 'span')\r\n        tag = subarquivo.find_element(By.CLASS_NAME, 'ui-treenode-label')\r\n        # Verificar se o texto da tag é igual a 'DMATE'\r\n        if tag.text == 'DMATE':\r\n            print(f'............................DMATE Encontrado na Pasta {pasta+1}.............................')\r\n            # Encontrar o elemento de checkbox para marcar os subelementos\r\n            checkbox = arquivo.find_element(By.TAG_NAME, 'span')\r\n            checkbox_cls = checkbox.find_element(By.CLASS_NAME, 'ui-chkbox-icon')\r\n            checkbox_cls.click()\r\n            # Sair do loop\r\n            break\r\n\r\n    print('\\n..................................Procurando FIDE...................................')\r\n    # Iterar através de um range de 0 a 49 para percorrer as ids até Encontrar o pasta do FIDE e marca-la\r\n    for pasta in range(0, 50):\r\n        id = f\"{arquivos_disponiveis}_{pasta}\"\r\n        print(f'......................................pasta  {pasta+1}......................................')\r\n\r\n        # Verifica se o id existe\r\n        try:\r\n            arquivo = driver.find_element(By.ID, id)\r\n        except:\r\n            continue\r\n\r\n        # Encontrar o elemento de tag que contém o texto do nó\r\n        subarquivo = arquivo.find_element(By.TAG_NAME, 'span')\r\n        tag = subarquivo.find_element(By.CLASS_NAME, 'ui-treenode-label')\r\n        # Verificar se o texto da tag é igual a 'FIDE'\r\n        if tag.text == 'FIDE':\r\n            print(f'............................FIDE Encontrado na Pasta {pasta+1}..............................')\r\n            # Encontrar o elemento de checkbox para marcar os subelementos\r\n            checkbox = arquivo.find_element(By.TAG_NAME, 'span')\r\n            checkbox_cls = checkbox.find_element(By.CLASS_NAME, 'ui-chkbox-icon')\r\n            checkbox_cls.click()\r\n            # Sair do loop\r\n            break\r\n\r\n    time.sleep(1)\r\n\r\n    # Gerar o PDF\r\n    driver.find_element(By.ID, 'accordion:j_idt161').click()\r\n    time.sleep(1)\r\n\r\n    # Localizar o elemento \"object\" e mudar para o frame\r\n    canva = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, 'object')))\r\n\r\n    print('\\n....................................PDF  GERADO.....................................')\r\n\r\n    time.sleep(1)\r\n\r\n    # Mudar para o frame do objeto \"object\"\r\n    driver.switch_to.frame(canva)\r\n    # Isso permite interagir com elementos dentro do frame\r\n\r\n    # Localizar o elemento de download dentro da parte direita do visualizador de ferramentas e clicar nele\r\n    container = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, 'mainContainer')))\r\n    toolbar = container.find_element(By.ID, 'toolbarContainer')\r\n    toolbar_viewer = toolbar.find_element(By.ID, 'toolbarViewer')\r\n    toolbar_viewer_direita = toolbar_viewer.find_element(By.ID, 'toolbarViewerRight')\r\n    download = toolbar_viewer_direita.find_element(By.ID, 'download').click()\r\n\r\n    # Mudar para o conteúdo padrão da página\r\n    driver.switch_to.default_content()\r\n    # Isso é necessário para interagir com elementos fora do frame\r\n\r\n    time.sleep(3)\r\n    #definir o caminho onde será salvo e o nome do aqruivo\r\n    caminho = f'C:\\\\Users\\\\eber_\\\\Documents\\\\S2iD\\\\teste\\\\FIDE-DEMATE_municipio_{protocolo}_status4.pdf'\r\n\r\n    app = Application(backend=\"win32\").connect(title='Salvar como')\r\n    dlg = app.window(title='Salvar como')\r\n\r\n    # Localizar o campo \"Nome do arquivo\" na janela \"Salvar como\" pelo índice\r\n    filename_input = dlg.child_window(class_name='Edit', found_index=0)\r\n    filename_input.set_edit_text(caminho)\r\n    time.sleep(1)\r\n    filename_input.type_keys('{ENTER}')  # Digita a tecla Enter para ativar o botão \"Salvar\"\r\n\r\n    print('\\n...................................Arquivo Salvo....................................')\r\n\r\n    # Voltar para a página de pesquisa\r\n    botao_voltar = driver.find_element(By.ID, 'j_idt26').click()\r\n\r\n    print('\\n............................Voltar a Pagina de Pesquisa.............................')\r\n\r\n    end_time = time.time()\r\n    execution_time = end_time - start_time\r\n\r\n    # Imprimir o tempo de execução\r\n    print(f\"Tempo de execução: {execution_time} segundos\")\r\n\r\n# Deslogar do sistema\r\ntime.sleep(10)\r\nsair = driver.find_element(By.ID, 'sair').click()\r\n\r\nprint('\\n.................................Script Execultado..................................')
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 754f62326ca8179e7de32fa97f07f8b9c1b01d6a)
+++ b/main.py	(date 1689464757203)
@@ -32,7 +32,8 @@
 print('\n')
 print('\n.....................................S2iD Ativo.....................................')
 
-
+Login = 'eber.elias@mdr.gov.br'
+Senha = 'Flasco@4528'
 
 # Fazer login
 usuario_login = driver.find_element(By.ID, 'usuario').send_keys(Login)
